<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackageId>PasswordPredicate</PackageId>
    <Authors>Jan ÄŒotar</Authors>
    <PackageTags>password;check;pass;string;validate</PackageTags>
    <Description>Password Predicate is used for checking if a string complies with the given requirements. It is meant for checking password strings.

It does not encrypt or decrypt the password and does not return a password strength.

BUT IT DOES OFFER:
 - setting the minimum and maximum password length,
 - setting required upper case letter count,
 - setting required lower case letter count,
 - setting required digit count and
 - setting required special character count.

ON TOP OF THAT IT ALSO OFFERS:
 - setting a list of words (strings) that must not be used in password,
 - finding these prohibited strings as substrings of the password,
 - finding these prohibited strings as subsequences of the password.
 - both substring and subsequence search can be turned on or off and 
 - match prohibited string case can also be turned on or off.

Password string must not be null and must not contain backslash (\).</Description>
    <Title>PasswordPredicate</Title>
    <RepositoryUrl>https://github.com/JanCotar/PasswordPredicate</RepositoryUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Version>1.0.1</Version>
    <PackageReleaseNotes>Consideres where prohibited substrings and/or subsequences are allowed.</PackageReleaseNotes>
  </PropertyGroup>

</Project>
